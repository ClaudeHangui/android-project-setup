# This is a basic workflow to help you get started with Actions

name: Pre Merge Checks

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: '.*'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  gradle:
    strategy:
      matrix:
        os: [macos-latest]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Repository
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      # Cache gradle files
      - name: Cache Gradle Files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: cache-gradle

      # Starting Gradle tasks
      - name: Run Gradle tasks
        run: ./gradlew build check publishToMavenLocal --continue

      # Code Checking
      - name: Check Kotlin code style
        run: ./gradlew ktlintCheck --continue   #Continues task execution after a task failure.

      # Code Formatting
      - name: Fix Kotlin code style deviations
        run: ./gradlew ktlintFormat --continue   #Continues task execution after a task failure.

      # (Basic) Code analysis
      - name: Basic code analysis
        run: ./gradlew detekt --continue   #Continues task execution after a task failure.

      # Stop gradle
      - name: Stop Gradle
        run: ./gradlew --stop
